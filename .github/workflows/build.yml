name: Build Docker Image

on:
  workflow_dispatch:
    inputs:
      force:
        type: boolean
        description: Force Build Image
        required: false
        default: false
      version:
        type: string
        description: Version of SOGo to build
        required: false
        default: latest
      ubuntu-version:
        type: string
        description: Ubuntu version to build
        required: false
        default: 20.04 # SOGo has serious performance issues on versions after Ubuntu 20.04

jobs:
  build:
    name: Build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        include:
          - registry: docker.io
            image: docker.io/miles170/sogo
            username: DOCKERHUB_USERNAME
            password: DOCKERHUB_TOKEN
          - registry: ghcr.io
            image: ghcr.io/miles170/sogo
            username: GHCR_USERNAME
            password: GHCR_TOKEN
    steps:
      - name: Get sogo version
        id: sogo-version
        run: |
          if [[ "${{ github.event.inputs.version }}" != 'latest' ]]; then
            version=${{ github.event.inputs.version }}
          else
            version=$(curl -sf 'https://api.github.com/repos/Alinto/sogo/releases/latest' | grep -oP 'tag_name": "SOGo-\K[^"]+')
            if [[ -z "${version}" ]]; then
              exit 1
            fi
          fi
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Check Docker image
        id: inspect
        run: |
          if [[ '${{ github.event.inputs.force }}' == 'true' ]]; then
            echo 'Skip version verification'
            echo 'build=true' >> $GITHUB_OUTPUT
            exit 0
          fi
          image=${{ matrix.image }}:latest
          if ! docker pull $image; then
            echo 'build=true' >> $GITHUB_OUTPUT
            exit 0
          fi
          version=$(docker inspect --format '{{ index .Config.Labels "org.opencontainers.image.version" }}' $image)
          if [[ "${version}" != '${{ steps.sogo-version.outputs.version }}' ]]; then
            echo "${version} != ${{ steps.sogo-version.outputs.version }}"
            echo 'build=true' >> $GITHUB_OUTPUT
          fi

      - name: Docker metadata
        if: ${{ steps.inspect.outputs.build == 'true' }}
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          labels: |
            org.opencontainers.image.title=sogo
            org.opencontainers.image.source=https://github.com/miles170/docker-sogo-from-sources
            org.opencontainers.image.version=${{ steps.sogo-version.outputs.version }}
            org.opencontainers.image.description=SOGo is a mail-aware Groupware Server
            org.opencontainers.image.base.name=docker.io/ubuntu:${{ github.event.inputs.ubuntu-version }}

      - name: Set up Docker Buildx
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ matrix.registry }}
          username: ${{ secrets[matrix.username] }}
          password: ${{ secrets[matrix.password] }}

      - name: Build and push
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ matrix.image }}:latest, ${{ matrix.image }}:${{ steps.sogo-version.outputs.version }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=registry,ref=${{ matrix.image }}:latest
          cache-to: type=inline
          build-args: |
            UBUNTU_VERSION=${{ github.event.inputs.ubuntu-version }}
            SOGO_VERSION=${{ steps.sogo-version.outputs.version }}
